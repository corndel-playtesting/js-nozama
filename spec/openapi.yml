openapi: 3.0.0
info:
  title: Nozama API
  description: API for Nozama, an e-commerce platform.
  version: '1.0'
  x-logo:
    url: 'https://github.com/corndeladmin/swe-js-nozama-api/blob/main/assets/nozama-logo.webp'
    altText: Nozama logo
servers:
  - url: 'https://api.nozama.com/v1'
    description: Main production server
tags:
  - name: Product
    description: Endpoints for product information and management.
  - name: User
    description: Endpoints related to user management and user data.
  - name: Review
    description: Endpoints for managing product reviews.
paths:
  /products:
    get:
      tags:
        - Product
      summary: Get a list of all products
      description: Returns an array of all products in the database.
      responses:
        '200':
          description: An array of products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
    post:
      tags:
        - Product
      summary: Add a new product
      description: Adds a new product to the database.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '201':
          description: Created product
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
  /products/{productId}:
    get:
      tags:
        - Product
      summary: Get detailed information about a product
      parameters:
        - in: path
          name: productId
          schema:
            type: integer
          required: true
          description: Numeric ID of the product to get
      responses:
        '200':
          description: Detailed product information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
  /products/category/{categoryId}:
    get:
      tags:
        - Product
      summary: Get products by category
      parameters:
        - in: path
          name: categoryId
          schema:
            type: integer
          required: true
          description: Numeric ID of the category
      responses:
        '200':
          description: An array of products in the specified category
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
  /users:
    post:
      tags:
        - User
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /users/{userId}:
    delete:
      tags:
        - User
      summary: Delete a user
      parameters:
        - in: path
          name: userId
          schema:
            type: integer
          required: true
          description: Numeric ID of the user to delete
      responses:
        '204':
          description: User deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /users/login:
    post:
      tags:
        - User
      summary: Log in to the system
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: true
                    description: Indicates whether the login was successful.
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                    description: Indicates whether the login was successful.
  /products/{productId}/reviews:
    get:
      tags:
        - Review
      summary: Get all reviews for a product
      parameters:
        - in: path
          name: productId
          schema:
            type: integer
          required: true
          description: Numeric ID of the product to get reviews for
      responses:
        '200':
          description: An array of reviews for the specified product
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Review'
    post:
      tags:
        - Review
      summary: Create a new product review
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - productId
                - userId
                - rating
                - reviewText
              properties:
                productId:
                  type: integer
                  description: ID of the product being reviewed.
                userId:
                  type: integer
                  description: ID of the user writing the review.
                rating:
                  type: integer
                  description:
                    Rating given to the product. Must be between 1 and 5.
                reviewText:
                  type: string
                  description: Text of the review.
      responses:
        '201':
          description: Review submitted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
  /products/{productId}/reviews/average:
    get:
      tags:
        - Review
      summary: Get the average rating for a product
      parameters:
        - in: path
          name: productId
          schema:
            type: integer
          required: true
          description: Numeric ID of the product to get the average rating for
      responses:
        '200':
          description: The average rating for the specified product
          content:
            application/json:
              schema:
                type: object
                properties:
                  averageRating:
                    type: number
                    format: float
                    description: The average rating for the product.
components:
  schemas:
    Product:
      type: object
      description:
        This schema represents a Product in the Nozama platform, detailing its
        pricing, stock, and descriptive information.
      required:
        - id
        - name
        - description
        - price
        - stockQuantity
        - imageURL
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier for the product
          readOnly: true
        name:
          type: string
          description: Name of the product
        description:
          type: string
          description: Description of the product
        price:
          type: number
          format: float
          description: Price of the product
        stockQuantity:
          type: integer
          description: Number of items in stock
        imageURL:
          type: string
          description: URL of the product image

    User:
      type: object
      required:
        - id
        - username
        - firstName
        - lastName
        - email
        - password
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier for the user
          readOnly: true
        username:
          type: string
          description: User's unique username
        firstName:
          type: string
          description: User's first name
        lastName:
          type: string
          description: User's last name
        email:
          type: string
          description: User's unique email address
        avatar:
          type: string
          description: URL to the user's avatar image
        password:
          type: string
          description: User's password
          writeOnly: true

    Category:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier for the category
        name:
          type: string
          description: Name of the category

    Review:
      type: object
      required:
        - id
        - productId
        - userId
        - rating
        - reviewText
        - reviewDate
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier for the review
          readOnly: true
        productId:
          type: integer
          format: int64
          description: ID of the product being reviewed
        userId:
          type: integer
          format: int64
          description: ID of the user who wrote the review
        rating:
          type: integer
          format: int32
          description: Rating given to the product
          minimum: 1
          maximum: 5
        reviewText:
          type: string
          description: Text of the review
        reviewDate:
          type: string
          format: date-time
          description: Date and time when the review was written
          readOnly: true
